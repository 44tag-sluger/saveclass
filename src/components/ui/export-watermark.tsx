
import html2canvas from "html2canvas";
import { toast } from "sonner";
import { Download } from "lucide-react";
import { Button } from "@/components/ui/button";
import { trackExport, isPremiumUser, getRemainingExports } from "@/utils/premium";

interface ExportWatermarkProps {
  elementRef: React.RefObject<HTMLElement>;
  filename: string;
  onExport?: () => void;
}

export function ExportWatermark({
  elementRef,
  filename,
  onExport
}: ExportWatermarkProps) {
  const handleExport = async () => {
    if (!elementRef.current) {
      toast.error("Nothing to export");
      return;
    }

    // Check if user can export
    const canExport = trackExport();
    if (!canExport) {
      toast.error("You've reached your export limit. Upgrade to continue exporting.");
      return;
    }

    try {
      // Take screenshot
      const canvas = await html2canvas(elementRef.current, {
        scale: 2,
        logging: false,
        backgroundColor: "#ffffff",
      });

      // Add watermark for non-premium users
      if (!isPremiumUser()) {
        const ctx = canvas.getContext("2d");
        if (ctx) {
          ctx.globalAlpha = 0.4;
          ctx.font = "bold 16px Arial";
          ctx.fillStyle = "#333333";
          ctx.textAlign = "center";
          ctx.fillText("Generated by SaveClass", canvas.width / 2, canvas.height - 30);
          
          ctx.globalAlpha = 0.2;
          ctx.font = "bold 40px Arial";
          ctx.fillStyle = "#555555";
          ctx.translate(canvas.width / 2, canvas.height / 2);
          ctx.rotate(-Math.PI / 6);
          ctx.fillText("SAVECLASS", 0, 0);
          ctx.rotate(Math.PI / 6);
          ctx.translate(-canvas.width / 2, -canvas.height / 2);
        }
      }

      // Convert to image and download
      const dataUrl = canvas.toDataURL("image/png");
      const link = document.createElement("a");
      link.download = `${filename}.png`;
      link.href = dataUrl;
      link.click();

      // Run callback if provided
      if (onExport) {
        onExport();
      }

      // Show success message with remaining exports for free users
      if (!isPremiumUser()) {
        const remaining = getRemainingExports();
        toast.success(`Exported successfully! You have ${remaining} exports remaining.`);
      } else {
        toast.success("Exported successfully!");
      }
    } catch (error) {
      console.error("Export failed:", error);
      toast.error("Failed to export. Please try again.");
    }
  };

  return (
    <Button 
      variant="outline"
      size="sm"
      onClick={handleExport}
      className="flex items-center gap-2"
    >
      <Download className="h-4 w-4" />
      <span>Export</span>
    </Button>
  );
}

export default ExportWatermark;
